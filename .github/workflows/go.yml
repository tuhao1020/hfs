name: Go

on:
  push:
    tags:
    - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Get tag
      id: get_version
      run: |
          echo ::set-output name=APPNAME::hfs
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
    - name: Pack executable file
      run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "-s -w -X main.Version=${{ steps.get_version.outputs.VERSION }}" -o ${{ steps.get_version.outputs.APPNAME }}_win_amd64.exe
          GOOS=linux GOARCH=amd64 go build -ldflags "-s -w -X main.Version=${{ steps.get_version.outputs.VERSION }}" -o ${{ steps.get_version.outputs.APPNAME }}_linux_amd64
          GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w -X main.Version=${{ steps.get_version.outputs.VERSION }}" -o ${{ steps.get_version.outputs.APPNAME }}_darwin_amd64
          
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
          zip --junk-paths ${{ steps.get_version.outputs.APPNAME }}_win README.md LICENSE ${{ steps.get_version.outputs.APPNAME }}_win_amd64.exe
          zip --junk-paths ${{ steps.get_version.outputs.APPNAME }}_linux README.md LICENSE ${{ steps.get_version.outputs.APPNAME }}_linux_amd64
          zip --junk-paths ${{ steps.get_version.outputs.APPNAME }}_darwin README.md LICENSE ${{ steps.get_version.outputs.APPNAME }}_darwin_amd64
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: ${{ GITHUB_SERVER_URL }}/${{ GITHUB_REPOSITORY }}/release_history/${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        
    - name: Upload release binaries
      uses: alexellis/upload-assets@0.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_paths: '["./*.zip"]'
